= form_for @item do |f|
  - if @item.errors.any?
    #error_explanation
      - if @item.errors.count > 1
        %h2= "Допущено #{pluralize(@item.errors.count, "")} ошибок. Не удается сохранить объект:"
      - else
        %h2= "Допущена #{pluralize(@item.errors.count, "")} ошибка. Не удается сохранить объект:"
      %ul
        - @item.errors.full_messages.each do |message|
          %li= message
  .row
    .col-md-6
      .form-group
        = f.label :width
        = f.text_field :width
      .form-group
        = f.label :height
        = f.text_field :height
      .form-group
        = f.label :depth
        = f.text_field :depth
      .form-group
        = f.label :weight
        = f.text_field :weight
      .form-group
        = f.label :receipt_date
        .input-group.date.datepicker
          = f.text_field(:receipt_date, value: lnil(f.object.receipt_date), class: 'form-control')
          %span.input-group-addon
            %span.glyphicon.glyphicon-calendar
      .form-group
        = f.label :contract_number
        = f.number_field :contract_number
      .form-group
        = f.label :place
        = f.number_field :place
      .form-group
        = f.label :contract_expiry_date
        .input-group.date.datepicker
          = f.text_field(:contract_expiry_date, value: lnil(f.object.contract_expiry_date), class: 'form-control')
          %span.input-group-addon
            %span.glyphicon.glyphicon-calendar
      .form-group
        = f.label :stack_id, "Выбор стеллажа из базы данных"
        = f.select :stack_id, Stack.all.collect{|s| [s.number, s.id]}, {:prompt => ""}  
  %h3= "Выберите или создайте нового клиента"
  .row
    .col-md-6
      .form-group
        = f.label :client_id, 'Клиент'
        = f.select :client_id, options_for_select(Client.all.map{|x| [x.entity_name, x.id]} + (@item.new_record? ? ["- Создание нового -"] : ["- Создание нового -", "- Редактирование -"]), f.object.client_id.nil? ? "- Создание нового -" : f.object.client_id), {include_blank: true}
            
  = f.fields_for :client, f.object.client || f.object.build_client do |pf|
    %fieldset#client-fieldset{"data-content" => "#{render "client_form", pf: pf}"}
      %div#client-fields
  - if check_sudo
    %br
    .form-actions
      = f.submit 'Сохранить', class: 'btn btn-success', id: 'save'
  - else
    %br
    %h2= "Создавать или изменять записи в базе данных имеет право только администратор"
%br
